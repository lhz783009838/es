<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
   http://www.springframework.org/schema/beans
   http://www.springframework.org/schema/beans/spring-beans.xsd
   http://www.springframework.org/schema/tx
   http://www.springframework.org/schema/tx/spring-tx.xsd
   http://www.springframework.org/schema/aop
   http://www.springframework.org/schema/aop/spring-aop.xsd">


    <!-- 设置druid数据源 -->
    <bean id="mybatisDatabaseSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
          destroy-method="close">
        <property name="url" value="${database.url}"/>
        <property name="username" value="${database.username}"/>
        <property name="password" value="${database.password}"/>
        <property name="driverClassName" value="${database.driverClass}"/>
        <property name="filters" value="${database.filters}"/>
        <property name="maxActive" value="${database.maxActive}"/>
        <property name="initialSize" value="${database.initialSize}"/>
        <property name="maxWait" value="${database.maxWait}"/>
        <property name="minIdle" value="${database.minIdle}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${database.timeBetweenEvictionRunsMillis}"/>
        <property name="minEvictableIdleTimeMillis" value="${database.minEvictableIdleTimeMillis}"/>
        <property name="validationQuery" value="${database.validationQuery}"/>
        <property name="testWhileIdle" value="${database.testWhileIdle}"/>
        <property name="testOnBorrow" value="${database.testOnBorrow}"/>
        <property name="testOnReturn" value="${database.testOnReturn}"/>
        <property name="poolPreparedStatements" value="${database.poolPreparedStatements}"/>
        <property name="maxPoolPreparedStatementPerConnectionSize"
                  value="${database.maxPoolPreparedStatementPerConnectionSize}"/>
    </bean>

    <!--<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">-->
        <!--<property name="dataSource" ref="mybatisDatabaseSource"/>-->
        <!--<property name="mapperLocations" value="classpath:com/mass/mappers/*.xml"/>-->
        <!--<property name="configLocation" value="classpath:mybatis-config.xml"/>-->
    <!--</bean>-->

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="mybatisDatabaseSource"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />

    <tx:advice id="advice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="create*" propagation="REQUIRED" isolation="READ_COMMITTED"/>
            <tx:method name="update*" propagation="REQUIRED" isolation="READ_COMMITTED"/>
            <tx:method name="delete*" propagation="REQUIRED" isolation="READ_COMMITTED"/>
            <tx:method name="getAndUpdate*" propagation="REQUIRED" isolation="READ_COMMITTED"/>
            <tx:method name="getAndCreate*" propagation="REQUIRED" isolation="READ_COMMITTED"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="serviceMethod" expression="execution(* com.mass..service..*(..))"/>
        <aop:advisor advice-ref="advice" pointcut-ref="serviceMethod"/>
    </aop:config>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.mass"/>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
        <property name="annotationClass" value="org.springframework.stereotype.Repository"/>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="mybatisDatabaseSource"/>
    </bean>


</beans>
